[{"/Users/caicai/Desktop/109-1-Web-final-project/src/index.js":"1","/Users/caicai/Desktop/109-1-Web-final-project/src/App.js":"2","/Users/caicai/Desktop/109-1-Web-final-project/src/reportWebVitals.js":"3","/Users/caicai/Desktop/109-1-Web-final-project/src/components/about/About.js":"4","/Users/caicai/Desktop/109-1-Web-final-project/src/components/NavBar.js":"5","/Users/caicai/Desktop/109-1-Web-final-project/src/components/airbox/Airbox.js":"6","/Users/caicai/Desktop/109-1-Web-final-project/src/components/aqi/Aqi.js":"7","/Users/caicai/Desktop/109-1-Web-final-project/src/components/dashboard/Dashboard.js":"8","/Users/caicai/Desktop/109-1-Web-final-project/src/components/dashboard/ShowData.js":"9","/Users/caicai/Desktop/109-1-Web-final-project/src/components/dashboard/Charts.js":"10","/Users/caicai/Desktop/109-1-Web-final-project/src/components/dashboard/MapboxMap.js":"11","/Users/caicai/Desktop/109-1-Web-final-project/src/components/dashboard/Top.js":"12"},{"size":500,"mtime":1611516309505,"results":"13","hashOfConfig":"14"},{"size":2426,"mtime":1611521111050,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1611516309534,"results":"16","hashOfConfig":"14"},{"size":2089,"mtime":1611516309489,"results":"17","hashOfConfig":"14"},{"size":1523,"mtime":1611516309489,"results":"18","hashOfConfig":"14"},{"size":1867,"mtime":1611516309498,"results":"19","hashOfConfig":"14"},{"size":505,"mtime":1611516309502,"results":"20","hashOfConfig":"14"},{"size":2540,"mtime":1611517005721,"results":"21","hashOfConfig":"14"},{"size":2282,"mtime":1611516309505,"results":"22","hashOfConfig":"14"},{"size":2234,"mtime":1611516309503,"results":"23","hashOfConfig":"14"},{"size":1364,"mtime":1611516309504,"results":"24","hashOfConfig":"14"},{"size":4148,"mtime":1611517141528,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1k0nqnk",{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"/Users/caicai/Desktop/109-1-Web-final-project/src/index.js",[],["57","58"],"/Users/caicai/Desktop/109-1-Web-final-project/src/App.js",["59","60","61","62"],"import './App.css';\nimport React, {useState} from 'react';\nimport NavBar from './components/NavBar.js';\nimport About from './components/about/About.js';\nimport Airbox from './components/airbox/Airbox.js';\nimport Aqi from './components/aqi/Aqi.js';\nimport Dashboard from './components/dashboard/Dashboard.js';\n\n//https://bootswatch.com/minty/\n\nconst client = new WebSocket('ws://localhost:80');\n\nfunction App(){\n    const [airbox, setAirbox] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [isscrap, setIsscrap] = useState(false);\n    const [scrapdata, setScrapdata] = useState([]);\n    const [scrapnum, setScrapnum] = useState([]);\n    const [error, setError] = useState(false);\n    client.onopen = () => {\n        console.log(\"Websocket has connected!\")};\n    const sendData = (data) => {client.send(JSON.stringify(data));};\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n        switch (task) {\n            case 'init': {\n                setAirbox(payload);\n                break};\n            case 'search': {\n                setAirbox(payload);\n                setError(false);\n                setLoading(false);\n                break};\n            case 'scrap': {\n                setScrapdata(payload[0]);\n                setScrapnum(payload[1]);\n                setIsscrap(true);\n                setError(false);\n                setLoading(false);\n                break};\n            case 'error': {\n                    setError(true);\n                break};\n            default:\n                break;\n          }\n    };\n\n    return (\n        <>\n            <div className=\"App\">\n                <NavBar/>\n                <header id=\"about\" className=\"App-header\">\n                    <About/>\n                </header>\n                <header id=\"airbox\" className=\"App-header\">\n                    <Airbox/>\n                </header>\n                <header id=\"aqi\" className=\"App-header\">\n                    <Aqi/>\n                </header>\n                <header id=\"dashboard\" className=\"App-header\">\n                    <Dashboard airbox={airbox} sendData={sendData} useIsscrap={{isscrap, setIsscrap}} scrapdata={scrapdata} scrapnum={scrapnum} setScrapdata={setScrapdata} useLoading={{loading, setLoading}} error={error}/>\n                </header>\n            </div>\n        </>);\n};\n\nexport default App;","/Users/caicai/Desktop/109-1-Web-final-project/src/reportWebVitals.js",[],"/Users/caicai/Desktop/109-1-Web-final-project/src/components/about/About.js",["63","64","65"],"import React from 'react';\nimport Giphy from './giphy.gif';\n\nfunction About(){\n    return (\n        <>\n            <div style={{height:'55px'}}/>\n            <div style={{height:'80%', margin:'1%', borderRadius:'10px', backgroundColor:'rgb(247, 247, 249)'}}>\n                <h1 style={{margin:'1%', fontSize:'30'}}>空氣監測網</h1>\n                <hr style={{margin:'0'}}/>\n                <div style={{height:'650px', borderRadius:'10px', display:'flex', flexDirection:'column', justifyContent:'center'}} >\n                    <h4>空氣中飄浮著許多灰塵狀的粒狀物，我們稱之為懸浮微粒。其中以PM2.5大小對人體健康的影響最大，濃度過高容易引起嚴重的免疫反應，例如咳嗽、哮喘，甚至支氣管炎、小支氣管炎等。目前已經有許多流行病學研究都已顯示，長期暴露於 PM2.5會增加罹患肺癌、心血管疾病、白血病等風險，因此我們必須審慎看待，不可忽略它對健康影響的重要性。</h4>\n                    <h4></h4>\n                    <h4>目前，許多空氣監測平台相繼建置，讓一般大眾得以即時查看空氣品質，及早做好保護措施、預防受到危害。用來偵測空氣品質的空氣盒子逐漸普及，目前已漸漸涵蓋全台範圍，因此我們透過實際蒐集、網路爬蟲等方式，實際建置一網站，試著以資料視覺化的方式，呈現出單一測站在各個不同時間點的監測數據。</h4>\n                    <h4></h4>\n                    <h4>本網站的功能有二：手動上傳資料到資料庫的search功能、以及即時利用網路爬蟲下載全台開放資料的scrap功能。需要注意的是，search需要由後台上傳，由於目前空氣盒子實體機器還在建置中，故我們利用隨機上傳至資料庫幾筆資料，來模擬真正的情況。另外，由於開放資料平台的限制，我們只能取得過去七天內的監測資料，若超出範圍則會顯示錯誤。</h4>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default About;","/Users/caicai/Desktop/109-1-Web-final-project/src/components/NavBar.js",[],"/Users/caicai/Desktop/109-1-Web-final-project/src/components/airbox/Airbox.js",[],"/Users/caicai/Desktop/109-1-Web-final-project/src/components/aqi/Aqi.js",[],"/Users/caicai/Desktop/109-1-Web-final-project/src/components/dashboard/Dashboard.js",["66"],"import React, {useState} from 'react';\nimport Top from './Top';\nimport MapboxMap from './MapboxMap.js';\nimport ShowData from './ShowData.js';\nimport Charts from './Charts.js';\n\nfunction Dashboard({airbox, sendData, useIsscrap, scrapdata, scrapnum, setScrapdata, error, useLoading}){\n    const today = new Date()\n    const [station, setStation] = useState(0);\n    const [year, setYear] = useState(today.getFullYear());\n    const [month, setMonth] = useState(today.getMonth());\n    const [day, setDay] = useState(today.getDate());\n    const [device_id, setDevice_id] = useState(\"\");\n    var indexlist = [];\n    if(airbox.length !==0){\n        for(var i = 0; i < airbox.length; i++)\n            {indexlist.push(airbox[i].Data.feeds.findIndex(x => x.SiteName === `${airbox[airbox.length-1].Data.feeds[station].SiteName}`));}\n    }\n    if(useIsscrap.isscrap){\n        indexlist = [];\n        for(var i = 0; i < scrapnum; i++)\n            {indexlist.push(i);}\n    }\n\n    return (\n        <>\n            <div style={{height:'55px'}}/>\n            <Top\n                airbox={airbox}\n                useStation={{station, setStation}}\n                useYear={{year, setYear}}\n                useMonth={{month, setMonth}}\n                useDay={{day, setDay}}\n                useDevice_id={{device_id, setDevice_id}}\n                sendData={sendData}\n                useIsscrap={useIsscrap}\n                scrapdata={scrapdata}\n                setScrapdata={setScrapdata}\n                error={error}\n                useLoading={useLoading}\n            />\n            <div style={{display:'flex', flexDirection:'row', height:'650px'}}>\n                <div style={{display:'flex', flexDirection:'column', alignItems:'center', textAlign:'left', height: '100%', width:'70%', margin: '0% 0.5% 1% 1%', borderRadius:'10px', backgroundColor:'rgb(247, 247, 249)'}}>\n                    <MapboxMap airbox={airbox} station={station} useIsscrap={useIsscrap} scrapdata={scrapdata}/>\n                </div>\n                <div style={{textAlign:'left', height:'100%', width:'30%', margin: '0% 1% 1% 0.5%', borderRadius:'10px', backgroundColor:'rgb(247, 247, 249)'}}>\n                    <ShowData airbox={airbox} station={station} indexlist={indexlist} useIsscrap={useIsscrap} scrapdata={scrapdata}/>\n                    <hr style={{margin:'2%'}}/>\n                    <Charts airbox={airbox} indexlist={indexlist} useIsscrap={useIsscrap} scrapdata={scrapdata}/>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Dashboard;","/Users/caicai/Desktop/109-1-Web-final-project/src/components/dashboard/ShowData.js",[],"/Users/caicai/Desktop/109-1-Web-final-project/src/components/dashboard/Charts.js",["67"],"import React, {useState} from 'react';\nimport {Line} from 'react-chartjs-2';\n\nfunction Charts({airbox, indexlist, useIsscrap, scrapdata}){\n    const items = [[\"PM2.5\", \"PM10\", \"PM1\", \"Humidity\", \"CO2\"], [\"s_d0\", \"s_d1\", \"s_d2\", \"s_h0\", \"s_t0\"]];\n    const [item, setItem] = useState(0);\n    var x = [];\n    var y = [];\n    if (useIsscrap.isscrap) {\n        for(var i = 0; i < scrapdata.length; i++){\n            x.push(scrapdata[i].time);\n            y.push(scrapdata[i][items[1][item]]);\n        }\n    }\n    else if(airbox.length !== 0)\n        for(var i = 0; i < airbox.length; i++){\n            x.push(airbox[i].Data.feeds[indexlist[i]].time);\n            y.push(airbox[i].Data.feeds[indexlist[i]][items[1][item]]);\n        }\n    const state = {\n        labels: x,\n        datasets: [{\n            label: 'Rainfall',\n            fill: false,\n            lineTension: 0,\n            backgroundColor: 'pink',\n            borderColor: 'navy',\n            borderWidth: 3,\n            data: y\n          }]\n    };\n    return (\n        <>\n            <div style={{height:'50%', borderRadius:'10px', backgroundColor:'lavender', margin:'1%'}}>\n                <select className=\"custom-select\" style={{width:'125px', margin:'1%'}} onChange={(e) =>{setItem(e.target.value)}}>\n                    <option selected disabled hidden>{items[0][item]}</option>\n                    {items[0].map((i, j) =>(<option value={j}>{i}</option>))}\n                </select>\n                <div style={{height:'80%', margin:'1%', background:'rgb(247, 247, 249)'}}>\n                    <Line\n                        data={state}\n                        options={{\n                            title:{\n                                display:true,\n                                text:`${items[0][item]}`,\n                                fontSize:20\n                            },\n                            legend:{\n                                display:false,\n                            },\n                            responsive: true,\n                            maintainAspectRatio: false,\n                            \n                        }}\n                    />\n                </div>\n            </div>\n        </>);\n};\n\nexport default Charts;","/Users/caicai/Desktop/109-1-Web-final-project/src/components/dashboard/MapboxMap.js",["68"],"import React, { useEffect } from 'react';\nimport mapboxgl from 'mapbox-gl';\n\n\nfunction MapboxMap({airbox, station, useIsscrap, scrapdata}){\n    mapboxgl.accessToken = 'pk.eyJ1IjoiY2FpY2FpMDQwMiIsImEiOiJja2p6eGZ4d2swYnVkMnZueWozM21nd3V2In0.KrnmI7BZAeeZ-ETTpZow5A';\n    useEffect(() =>{\n        //style: 'mapbox://styles/mapbox/light-v10'\n        const map = new mapboxgl.Map({\n            container: '0_map',\n            style: 'mapbox://styles/mapbox/streets-v11',\n            center: useIsscrap.isscrap?[scrapdata[0].gps_lon,scrapdata[0].gps_lat]:airbox.length!==0? [airbox[airbox.length-1].Data.feeds[station].gps_lon, airbox[airbox.length-1].Data.feeds[station].gps_lat] : [121.538517, 25.02718],\n            zoom: 13\n            });\n        map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\n        if(airbox.length !== 0)\n            new mapboxgl.Marker({color:\"red\"}).setLngLat(useIsscrap.isscrap?[scrapdata[0].gps_lon,scrapdata[0].gps_lat]:[airbox[airbox.length-1].Data.feeds[station].gps_lon, airbox[airbox.length-1].Data.feeds[station].gps_lat]).addTo(map);\n        });\n    return (\n        <>\n            <link href='https://api.mapbox.com/mapbox-gl-js/v1.10.1/mapbox-gl.css' rel='stylesheet' />\n            <div id='0_map' style={{height:\"98%\", width:\"98%\", margin:\"1%\"}} />\n        </>);\n    \n    return <></>\n}\n\nexport default MapboxMap;\n","/Users/caicai/Desktop/109-1-Web-final-project/src/components/dashboard/Top.js",["69"],"import React, {useState, useEffect} from 'react';\nimport '../bootstrap.min.css';\n\nfunction Top({airbox, useStation, useYear, useMonth, useDay, useDevice_id, sendData, useIsscrap, scrapdata, scrapnum, setScrapdata, error, useLoading}){\n    const [temp_year, setTemp_year] = useState(useYear.year);\n    const [temp_month, setTemp_month] = useState(useMonth.month+1);\n    const [temp_day, setTemp_day] = useState(useDay.day);\n    var temp_station = useStation.station;\n    const changeStation = (e) =>{temp_station = e.target.value;};\n    const changeYear = (e) =>{setTemp_year(e.target.value);};\n    const changeMonth = (e) =>{setTemp_month(e.target.value);};\n    const changeDay = (e) =>{setTemp_day(e.target.value);};\n    const how_many_days = () =>{\n        if(temp_year===useYear.year && temp_month-1===useMonth.month)\n            return useDay.day;\n        var d = new Date(temp_year, temp_month, 0);\n        return d.getDate();\n    }\n    const handle_data_search = () =>{ \n        useIsscrap.setIsscrap(false);\n        useStation.setStation(temp_station);\n        useLoading.setLoading(true);\n        useDevice_id.setDevice_id(airbox.length!==0?airbox[airbox.length-1].Data.feeds[useStation.station].device_id:\"\");\n        sendData([\"search\", `${temp_year}-${temp_month}-${temp_day}`]);\n    }\n    const handle_data_scrap = async() =>{\n        useStation.setStation(temp_station);\n        useLoading.setLoading(true);\n        useDevice_id.setDevice_id(airbox.length!==0?airbox[airbox.length-1].Data.feeds[useStation.station].device_id:\"\");\n        if(airbox.length===0){await sendData([\"search\", '2021-1-18']);}\n        sendData([\"scrap\", airbox.length!==0?airbox[airbox.length-1].Data.feeds[useStation.station].device_id:\"\", `${temp_year}-0${temp_month}-${temp_day}`]);\n    }\n\n    return (\n        <>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\" style={{margin: '1% 1%', borderRadius:'10px'}}>\n                <b className=\"navbar-brand\" href=\"#\">{airbox.length!==0? airbox[airbox.length-1].Data.feeds[useStation.station].SiteName:\"\"}</b>\n                <h4 style={{color:'#FF0000'}}>{error?\" ERROR! NO DATA!\":\"\"}</h4>\n                <div className=\"collapse navbar-collapse\" id=\"navbarColor03\"></div>\n                <select name=\"test\" className=\"custom-select\" style={{width:'200px', margin:'0 1%'}} onChange={changeStation}>\n                    <option selected disabled hidden>{airbox.length!==0? airbox[airbox.length-1].Data.feeds[temp_station].SiteName:\"\"}</option>\n                    {airbox.length!==0? airbox[airbox.length-1].Data.feeds.map((i, j) =>(<option value={j}>{i.SiteName}</option>)):\"\"}\n                </select>\n                <select className=\"custom-select\" style={{width:'100px', margin:'0 0.5% 0 1%'}} onChange={changeYear}>\n                    <option selected disabled hidden>{`${temp_year}年`}</option>\n                    {Array.from(Array(useYear.year-2018), (i,j) =>j+2019).map((i) =>(<option value={i}>{`${i}年`}</option>))}\n                </select>\n                <select id=\"select_month\" className=\"custom-select\" style={{width:'100px', margin:'0 0.5% 0 0.5%'}} onChange={changeMonth}>\n                    <option selected disabled hidden>{`${temp_month}月`}</option>\n                    {Array.from(Array(temp_year===useYear.year? useMonth.month:12), (i,j) =>j+1).map((i) =>(<option value={i}>{`${i}月`}</option>))}\n                </select>\n                <select className=\"custom-select\" style={{width:'100px', margin:'0 2% 0 0.5%'}} onChange={changeDay}>\n                    <option selected disabled hidden>{`${temp_day}日`}</option>\n                    {Array.from(Array(how_many_days()), (i,j) =>j+1).map((i) =>(<option value={i}>{`${i}日`}</option>))}\n                </select>       \n                <button type=\"button\" className=\"btn btn-secondary\" disabled={useLoading.loading} onClick={handle_data_search}>Search</button>\n                <button type=\"button\" className=\"btn btn-warning\" disabled={useLoading.loading} onClick={handle_data_scrap} style={{margin:'0 0.5% 0 0.5%'}}>Scrap</button>\n            </nav>\n        </>);\n};\n\nexport default Top;",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":27,"column":26,"nodeType":"76","messageId":"77","endLine":29,"endColumn":23},{"ruleId":"74","severity":1,"message":"75","line":30,"column":28,"nodeType":"76","messageId":"77","endLine":34,"endColumn":23},{"ruleId":"74","severity":1,"message":"75","line":35,"column":27,"nodeType":"76","messageId":"77","endLine":41,"endColumn":23},{"ruleId":"74","severity":1,"message":"75","line":42,"column":27,"nodeType":"76","messageId":"77","endLine":44,"endColumn":23},{"ruleId":"78","severity":1,"message":"79","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":13},{"ruleId":"82","severity":1,"message":"83","line":13,"column":21,"nodeType":"84","endLine":13,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":15,"column":21,"nodeType":"84","endLine":15,"endColumn":25},{"ruleId":"85","severity":1,"message":"86","line":21,"column":17,"nodeType":"80","messageId":"87","endLine":21,"endColumn":18},{"ruleId":"85","severity":1,"message":"86","line":16,"column":17,"nodeType":"80","messageId":"87","endLine":16,"endColumn":18},{"ruleId":"88","severity":1,"message":"89","line":25,"column":5,"nodeType":"90","messageId":"91","endLine":25,"endColumn":17},{"ruleId":"78","severity":1,"message":"92","line":1,"column":26,"nodeType":"80","messageId":"81","endLine":1,"endColumn":35},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'Giphy' is defined but never used.","Identifier","unusedVar","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-redeclare","'i' is already defined.","redeclared","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]